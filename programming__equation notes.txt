<<<<<<< HEAD
#mathematical equation notes.



#PERCENTAGE ---------

percent=(value/totalValue) *100
--alt
p = value*percentage /100




#POINTS -------------


#VECTORS ------------

#add vectors: 
eg. <1 2 3> + <3 2 1> = <4 4 4>

#multiply (or scale) a vector by a number (generally called a scalar):
eg. 2 * <1 1 1> = <2 2 2>

#distance of two points:
eg. d((1, 2, 3), (3, 2, 1) = sqrt((1 - 3)2 + (2 - 2)2 + (3 - 1)2) = sqrt(8) ~= 2.82

#angle between two vectors:
#in python
#import numpy as np
def angleBetweenVectors (v1, v2, acute=True, degrees=False):
	#args: v1=first vector, v2=second vector, acute or obtuse angle, return degrees or radians
	#returns: angle in degrees or radians
	angle = np.arccos(np.dot(v1, v2) / (np.linalg.norm(v1) * np.linalg.norm(v2)))
	if acute:
		if degrees:
			return angle/np.pi
		else:
			return angle
	else: #if obtuse
		if degrees:
			return 2 * np.pi - angle/np.pi
		else:
			return 2 * np.pi - angle



=======
#mathematical equation notes.



#PERCENTAGE ---------

percent=(value/totalValue) *100




#POINTS -------------


#VECTORS ------------

#add vectors: 
eg. <1 2 3> + <3 2 1> = <4 4 4>

#multiply (or scale) a vector by a number (generally called a scalar):
eg. 2 * <1 1 1> = <2 2 2>

#distance of two points:
eg. d((1, 2, 3), (3, 2, 1) = sqrt((1 - 3)2 + (2 - 2)2 + (3 - 1)2) = sqrt(8) ~= 2.82

#angle between two vectors:
#in python
#import numpy as np
def angleBetweenVectors (v1, v2, acute=True, degrees=False):
	#args: v1=first vector, v2=second vector, acute or obtuse angle, return degrees or radians
	#returns: angle in degrees or radians
	angle = np.arccos(np.dot(v1, v2) / (np.linalg.norm(v1) * np.linalg.norm(v2)))
	if acute:
		if degrees:
			return angle/np.pi
		else:
			return angle
	else: #if obtuse
		if degrees:
			return 2 * np.pi - angle/np.pi
		else:
			return 2 * np.pi - angle



>>>>>>> origin/master
