+---texturing----------------------------------------------------+
¦
¦	-Baking maps
¦	-ID map
¦	-Material creation
¦	-Naming convention
¦	-Import/Export
¦
+-----------------------------------+










BAKING MAPS:
//maya
-----	Texture Baking using Turtle plug-in ( Turtle.mll);
To set up a surface transfer
>	In your scene, place your low res and high res objects on top of each other in the same position.
>	Open the Texture Baking View window (Windows > Material/Texture Baking Editors > Texture Baking).
>	In Texture Baking View toolbar, click  to open the Texture Baking Settings.
>	In the Texture Baking Settings window, open the Baking tab and expand the Targets section.
>	In the Outliner (Windows > Outliner), select your low res object.
>	In the Targets section, click Add Selected to add the low res object to the Target Surfaces list.
>	In the Outliner, select your high res object.
>	In the Targets section, click Add Selected to add the high res object to the Source Surfaces list.
>	In the Baking tab, do the following:
>	Select Bake To: Texture.
>	Adjust the Transfer Settings.
>	Transfer settings determine the way Turtle samples from the low res object to the high res object to determine the detail it needs to create. For more information, see Baking tab.

>	In the Texture Bake Settings, select a directory to store your files. By default, files are stored in turtle/bakedTextures.
>	Adjust the Shader Outputs to control the type of information that is baked. For more information on specific workflows, see Transfer color textures with Turtle and Bake normal maps with Turtle.
>	Open the Texture Baking View window (Windows > Materials/Texture Baking Editors > Texture Baking View).
>	In the toolbar, click  to initiate the texture baking.







ID MAP:
//ZBrush
>	assign material+color to your high rez mesh in 3d app. optionaly, can use low res mesh and bake seperatly, selecting that mesh in baking> common> 'high definition meshes'

>	baking> ID; select material color, hue shift and apply to all.

>	baking> 'bake all texture sets' (deselect maps you don't want to bake.)



----- Polypaint Identity Map (substance material id)
>	color:polypaint from polygroups (Tool:Polypaint:Polypaint from Polygroups).  

>	texture map from polypaint (Tool:Textue Map:New from Polypaint)





//Substance:
import ID:
>	Import bmp ID map to textures by drag and drop then select this map in the 'texture set' menu.

>	Add 'Mask with Color Selection' to layer and choose mask ID color. (copy/paste mask to any additional layer)

baking ID:
>	Material ID maps bake in from HI-poly object's shader map
>	TextureSet Settings> Bake textures> ID map










	




MATERIAL CREATION:
world aligned texture:
//unreal
>	create a worldAlignedTexture node.
>	convert the bitmap/normal map to a 'Texture Object' and plug it into the worldAlignedTexture 'TextureObject' input. (right click 'Texture Sample' and Convert to texture object)
>	create a size node and plug it into the worldAlignedTexture TextureSize input.
>	connect the XYZ texture output of the worldAlignedTexture node to the base materials 'base color' input.




	

EMISSIVE:
//unreal:
>	create material and double click to open the material editor
>	create a constant(float)(name it emission), a constant3vector(name it color), and a plug those into a multiply node
>	plug the multiply node into the materiat emmisive color slot
>	close out the material editor, right click the material and create a new instance.
>	




PROCEDURAL:

//Procedural tiling of bitmaps: (This will only work for relatively uniform textures, not for those with repetitive patterns, such as bricks, planks or tiles.)

>	make a copy of your bitmap in the Material Editor
>	offset it in both axes by a random value
>	plug these two bitmaps in a Composite or Mix map
>	take a Noise map with fractals on and use the RGB curve to clamp it to just black and white (it will look like a cow hide).
>	Now you can use this Noise map as a mask to mix your two bitmaps, introducing chaos in the tiling – though you’ll need a high value for the scale of the Noise.








NAMING CONVENTION FOR MESH PARTS:
//substance:
baking in substance with meshes consisting of multiple overlapping parts;

>	add a suffix in order to enable Painter to recognise them. 
	eg. GUN_001_low will match with GUN_001_high. 

>	optional: if you need to bake multiple HD meshes on one single LP mesh, you’ll find that GUN_001_LOW matches GUN_001_HIGH_Part1, GUN_001_HIGH_Part2 and so on.	












IMPORT/EXPORT:
//maya to substance painter
>	export settings:
	-smoothing groups (checked)
	-smooth mesh
	-triangulate (Substance Painter triangulation of polygons doesn't match the triangulation used in Unreal. Triangulate before baking & exporting)

	
	


	




