Unreal Engine notes.









======================================================================
	Naming Convention:
======================================================================

prefix:
M_		-material
MT_		-
MS_		-
MI_		-material instance
MF_		-material function
MPC_	-material parameter collection
T_		-texture

P_		-particle system

BP_		-blueprint (except for derived common classes: HUD/GameMode/Character)
BPI_	-blueprint interface

SM_		-static mesh
SK_		-skeletal mesh

S_		-sound (include _Mono or _Stereo designations (ex. S_HitImpact_Mono_01))
S_*_Cue	-sound cue (ex.S_HitImpact_01_Cue)

E		-enumeration (similar to convention in code (enum EWeaponType))

RT_		-render target

Curve_	-vector/float/color curve

CamShake_	-camera shake

Widget_	-user widget

Font_	-font (size is included in name. (ex. Font_Roboto48))


suffix:
_PhysMat -physics material

_att	-attenuation

----------------------------------------------------------------------









======================================================================
	GEOMETRY:
======================================================================

geometry brushes: ----------------------------------------------------


insert edgeloop:
>	geometry edit mode
>	select edgeloop
>	modes> Edit (last tab)> Split


boolean operation:
>	geometry edit mode
>	modes tab> geometry> select geometry brush with subtract radio button selected.
or alt click transform to duplicate existing geometry, and set details tab> brush settings> brush type> subtractive


combine / convert to static mesh:
>	geometry edit mode
>	select mesh object(s)
>	details tab> Create Static Mesh
>	select save location



splines: -------------------------------------------------------------
create spline:
>	New blueprint class> actor
>	components tab> add component> spline
>	connect spline output to get number of spline points (node)
>	


deform mesh along spline:
>	create mesh object with enough subdivisions to deform appropriately.

----------------------------------------------------------------------









======================================================================
	LIGHTING:
======================================================================


create sun:
>	create directional light
>	details tab> (expand advanced tab) check Atmosphere


emissive light:
>	


Environment Directional Light w/Fog
- exponential height fog settings:
>	details tab> Fog inscattering color> choose fog tint
>	""		   > Fog Density> ~0.01
>	""		   > Volumetric fog> checked on
>	""		   > Scattering Distribution> ~0.5
>	""		   > Extintion Scale> ~2.5-10
- directional light settings:
>	details tab> indirect lighting intensity> ~2.0
>	""		   > volumetric scattering intensity> ~0.1
>	""		   > atmosphere/Fog Sun light> checked on
>	""		   > specular scale> ~0.1
>	""		   > light shaft occlusion> checked on
>	""		   > light shaft bloom>	checked on

----------------------------------------------------------------------









======================================================================
	BLUEPRINTS:
======================================================================

Add blueprint to:
:asset:
>	with asset selected:
>	details tab> (add) blueprint


Variables: -----------------------------------------------------------



Events: --------------------------------------------------------------

addCustomEvent	- (after addCustomEvent creation, a trigger function can be found of the event name specified in addCustomEvent (call fuction> name))




Mathmatical Operations: ----------------------------------------------

:value types
	integer, integer64
	float
	vector, vector2d, vector4
	matrix
	byte
	quat
	timespan
	framenumber
	
:operators:
	+
	-
	*
	/

:syntax:
	<type><operator><type>	ie. float+int






Coordinates: ---------------------------------------------------------

setActorLocationAndRotation -
setWorldLocationAndRotation	-
setLocalOriginLocation		-
setWorldOffset				-




Conditionals: --------------------------------------------------------

:boolean	
branch		-can be used to expose a toggle parameter




Loop: ----------------------------------------------------------------

for loop (for loop w/break)

event tick	-increments every frame




Order of Operations: -------------------------------------------------

sequence	-execute sequentially

----------------------------------------------------------------------









======================================================================
	MATERIALS:
======================================================================

Common hotkeys: ------------------------------------------------------

1234+lmb	- 1-4 vector constant node
u			- TexCoord (uv coorinates) node
t			- Texture sampler node
s/v			-scalar or vector parameter
a/d/m		-Create an Add, Divide, Multiply node
c			-Frame (comment) the currently selected nodes.
ctrl		-repin connections while ctrl+drag





Nodes: ---------------------------------------------------------------

Material:
MakeMaterialAttributes	-combine material attributes.

BreakMaterialAttributes	-split up all of the incoming attributes of the Material Layer, and then just plug in the ones you want. This also allows for complex blending of various Material Attributes.


Color:
Constant2Vector		- 0-1 greyscale
Constant3Vector		- rgb
Contandt4Vector		- rgba
VectorParameter 	-identical to the Constant4Vector, except that it is a parameter and can be modified in instances of the material and through code. value can be set using the Color picker.


Grayscale:
Desaturation	-grayscale balancing
RGBtoHSV		-convert color to Hue, Saturation, Value and use value.


Blend:
LinearInterpolate 	-mix A(base)/ B/ Alpha. (Lerp gets a num between two numbers at a specific increment.)

MatLayerBlend_Simple	-Provides a simple linear interpolation (Lerp) blending solution for 2 Material Layers. Does not blend Normal; instead, retains Normal of the Base Material.

MatLayerBlend_Standard	-Blends all attributes of two Material Layers.

MatLayerBlend_Decal		-Blends a decal sheet over the Material using the 2nd UV channel.


Multiply	-
Add			-
Subtract	-
Divide		-


Reflections:
Fresnel		-the lower the angle, the stronger the reflection becomes.


Texture:
TextureSample	-outputs the color value(s) from a texture. This texture can be a regular Texture2D (including normal maps), a cubemap, or a movie texture.

TextureObject	-provides a default texture for a texture function input within a function. This node does not actually sample the texture, so it must be used in conjunction with a TextureSample node.


Gradient:
TexCoord	-cheaper and more accurate to mask a UV sample rather than importing a texture,


Range:
Clamp			-clamp values within a given range.
Saturate node	-clamps the value between 0 and 1.


Mask:
ComponentMask	-set a specific subset of channels (R,G,B,A)


Opacity:
OpacityStrength -


Normal:
FlattenNormal	-set normal intensity.


Translate:
Panner		-outputs UV texture coordinates that can be used to create panning, or moving, textures.

Rotator		-outputs UV texture coordinates in the form of a two-channel vector value that can be used to create rotating textures.


Switch:
StaticSwitch	-takes two inputs, outputs the first if the value of the parameter is true, else; false. (static=cannot change at runtime)

StaticBool		-boolean. (parameter version is static=cannot change at runtime)


UV:
TextureCoordinate	-outputs UV texture coordinates in the form of a two-channel vector value. 



Functions: -----------------------------------------------------------

Create a Material Function:
>	Content browser right context menu>	New> Materials & Textures> Material Function.
>	Create a FuntionInput and select input type from drop down list.
>	Create a FunctionOutput (material expression function output).


Call a Material Funtion:
MaterialFunctionCall	-select the function to call from the drop down properites list.


Publish a Material Function: (make visible within the Material Function Library)
>	Deselect all nodes within your function. This will bring up the function's base properties within the Details panel.
>	Add a description (tooltip).
>	Set 'Expose to Library' property: true



Procedures: ----------------------------------------------------------

Increase Texture RGB intensity:
>	add Multiply node and input from texture RGB out.
>	add integer to B slot and adjust intensity as needed.
>	multiply node output to material base color.


Color Tint:
>	Create a ColorTint node and plug it into a Multiply node's 'A' slot.
>	Plug the tinted output into the Multiply node's 'B' slot.


Contrast:
>	Create two Constant nodes, and plug them into a Lerp node (they will drive the high/low range).
>	Plug the grayscale value to be adjusted into the 'Alpha' slot.

CheapContrast node (remaps the high end of the histogram to a lower value, and the low end of the histogram to a higher one. This is similar to applying a Levels adjustment in Photoshop, and pulling the black and white flags in a bit).

CheapConstrast_RGB node (takes in a Vector3 as the input, allowing it to perform contrast operations on a color image).


Lighten | Darken:
>	Create a Power node (outputs: a num * itself x number of times).
>	Plug the color to modify into the 'Base' slot.
>	Plug a Constant into the 'Exp' slot (neg values lighten, pos values darken).


Invert:
>	Create a OneMinus node (outputs: 1 - x).


Decals:
>	Set material node> details tab>
		material domain=deferred decal
		blend mode=translucent
		decal blend mode=dbuffer translucent color (or other dbuffer option)
>	Create texture sample node (mask) and plug it into the opacity material slot (greyscale controls opacity, black=transparent)
>	Create the decal map or color node, and plug it and the mask into a multiply node.

-	Turn on/off decal projection for specific objects.
>	Details tab> Rendering> Receives decals on/off (advanced option expandable submenu, eye icon> expand all catagories)


Opacity:
>	Set material node> details tab> Material> Blend Mode: 'Masked'.
>	Plug grayscale opacity map to the material nodes 'Opacity Mask' slot. (white=opaque)


Tiling:
>	create a TexCoord and plug it into the 'A' slot of a Multiply node.
>	Create a Constant and plug it to the 'B' slot of the Multiply node.
>	Plug the output of the Multiply node into the texture sample 'uv' slot.
>	Adjust tiling via the Constant.


Substance Materials:
>	Map details tab> Texture> Uncheck: sRGB (switch to linear). 
>	Occlusion/roughness/metallic Node connections:
	r	-ambient occlusion
	g	-roughness
	b	-metallic


Expose A Parameter: (make variable public/private)
>	Node> right click context menu> Convert to Parameter
>	Node details tab> Material Expression> Set Group and Sort Priority (grouping and order)


Create a Particle (volume) Material:
>	Create new Material.
>	Details tab> Material Domain> Volume
>	""		   > Blend Mode> Additive

----------------------------------------------------------------------









======================================================================
	ANIMATION:
======================================================================

spawnable camera (lightning bolt icon): exists only within a sequence.	
possessable camera (): scene actor


Animate camera:
:In the sequence editor:
>	sequence editor toolbar> create new camera
>	position camera while on the starting keyframe.
>	camera transform track> <-+-> icon to add a new keyframe
>	move to ending keyframe, and reposition camera in viewport (with smart keyframe toolbar icon checked(diamond shape with key inside), or manually keyframe as before)

:Along rail:
>	cinematic> add camera and camera rig rail to scene
>	parent the cine camera actor to the camera rig (drag camera into rig in outliner)
>	camera> details tab> zero out location. (to center on rail)
>	modify rail by transforming spline points. (right click context menu> add points)
- rail> details tab> Current Position on Rail controls the camera position on the rail 0-1.
- rail> details tab> Lock Orientation to Rail keeps the camera aligned to the rail.
>	drag both the rig and the camera to the sequencer tracks.
>	at the top of the sequencer tracks section (left)> +camera> select the camera created earlier.
>	rail> details tab> Current Position on Rail> add keyframe (small '+' icon left side of spinbox)
>	drag playhead to end of sequence, and add keyframe (left side in track 'Current Pos on Rail'> <-+-> icon)
>	On that same track, set rail position to 1.0 (directly left of the <-+-> button just used)


Create Cimematic Sequence:
>	Add New> Animation> level Sequence (or scene toolbar> Cinematics> add level sequence)
>	In the level sequence editor; drag Cimematic (top left)> Cine Camera Actor into the scene.
>	Drag the newly created Cine Camera from the world outliner to the sequencer track.
>	In the sequencer create new camera (camera icon in sequencer toolbar)



Record Sequence:
>	main toolbar> window> Sequence Recorder
>	drag the top-level parent geometry object into the recorder.
>	sequence recorder toolbar> record
>	scene toolbar> play
>	click into the scene and animate the object with it's blueprint shorcuts. (esc or 'stop all' to stop recording)
>	click the pop up dialog to navigate to the recorded sequence. (cinematics\sequences\recorded sequences)


Hide Sequence actors(geometry):
>	Drag geometry to hide into the sequence editor.
>	(add) +track> Actor Hidden In Game
>	visibility track is now visible. Uncheck to hide on all frames.

----------------------------------------------------------------------









======================================================================
	PERFORMANCE:
======================================================================

General:
- use viewport toolbar> lit> optimization viewmodes to visualize potential issues.
- on completion; migrate to a new empty project without starter content, or other unused assets.
>	level right click context menu> asset actions> migrate..



Lighting:
- main menu> window> World Settings (Lightmass section)
>	adjust lighting quality and bounces.
-Scene toolbar> Project Settings> Rendering
>	Allow Static Lighting, Bloom, Ambient Occlusion, Antialiasing




Textures:
- use material instances when possible.
- lower resolution when able
- simple built in materials when able
- transparent or masked materials cost more
- keep functions simple



Minimize draw calls:
- combine geometry when able

----------------------------------------------------------------------









======================================================================
	IMPORT / EXPORT:
======================================================================

Exporting Geometry to Unreal:
- smooth mesh normals.
- uniform scale and not flipped uv's (use uv checker with text to determine uv direction).
- material id mapped to model.
- group geometry and set pivot points for any potential animation.
- scale model to real world units.
- reset (bake) scale/rotation
- export each part that requires a separate pivot as FBX (settings: smoothing groups=1).

----------------------------------------------------------------------









======================================================================
	ERRORS:
======================================================================

Material function input error:
Either the parameter is missing a default value alltogether, or the checkbox 'use preview as default value' on the parameter is unchecked.


----------------------------------------------------------------------