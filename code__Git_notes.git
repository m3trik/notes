//Git notes




# SETUP: ------------------------------------------------------------------------------
git --version	//current installed version of git

git config --global user.name ''	//add user name string
git config --global user.email ''	//add user email string





# FILES: ------------------------------------------------------------------------------
touch <file>	//create a file ie. touch .gitignore or touch file.txt

git add <file>	//add files to index.
git add *.py	//add all .py files to index.
git add .		//add all files in the directory.
git add -A //(--all)(alt add all)


git rm --cached <file>	//remove files from index.


git status	//check status of working tree ie. files modified, files added/removed





# REPOSITORY: -------------------------------------------------------------------------
git init	//initialize local git repository.
git remote	//list remote repositories


git commit	//commit changes in index (hit i to insert text, un-comment 'initial commit', esc to exit insert mode, enter command :wq and hit enter)
git commit -m 'Changed <file>'	//skipping all of the above and including comment with the -m flag

git push -u origin master //create a new repository
git push	//push to existing repository
git pull	//pull latest from remote
get clone	//clone repository into a new directory



//move an existing repository
cp -r gitrepo1 newrepo	//copy the directory into newrepo dir that exists already (else create it)

rm -rf gitrepo1/.git	//remove .git from old repo to delete all history and anything git from it






# BRANCH: -----------------------------------------------------------------------------
git checkout <branch name>	//create a new branch

git merge <branch name>	//merge branch (while in branch to merge to)


















# Procedures: --------------------------------------------------------------------------


git pull/git push




















# GITIGNORE: ---------------------------------------------------------------------------


# all directories
**	'**/foo' matches file or directory "foo" anywhere, the same as pattern "foo". 
	'**/foo/bar' matches file or directory "bar" anywhere that is directly under directory 'foo'.


# directory contents
	'/**abc/**' matches all files inside directory "abc", relative to the location of the .gitignore file, with infinite depth.


# zero or more directories
	'a/**/b' matches "a/b", "a/x/b", "a/x/y/b" and so on.


# exclude all
*


# exclude all files containing:
*.*


# exclude all ending with:
*.txt


# exclude specific file:
file.txt


# exclude entire directory
/directory


# exclude files ending with slash (directories)
*/


# exclude all directories, and sub-directories
*/*


# exclude subdirectories
*/


# inverse
!	!.gitignore
	!*/Read & Write prt/read & Write prt.py


# case:
[Dd]	ex. [Dd]ebug/
